{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CAKXC,KAAMC,SAASC,cAAc,UAG/B,IAAIC,EAAS,KAmCb,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BT,EAASU,YAAW,KACdN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA3CbP,EAAKC,KAAKc,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAIC,iBACJC,aAAad,GAIb,MAAMe,IAAYZ,MAAEA,MAAKa,KAAEA,KAAIC,OAAEA,QAAWL,EAAIM,OAAOC,UAEvD,IAAIC,EAAYC,OAAON,EAASZ,MAAMmB,OACtC,GAAAP,EAAAZ,MAAAmB,MAEE,GAAAP,EAAeC,KAAKM,MACpB,GAAAP,EAAcE,OAAQK,MACtB,EAGA,YADA5B,EAAA6B,OAAOC,QAAQ,wCAGjB,IAAK,IAAIC,EAAI,EAAGA,GAAKV,EAASE,OAAOK,MAAOG,GAAK,EAC/CxB,EAAcwB,EAAGL,GACdM,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBT,EAAA6B,OAAOI,QAAQ,wBAAsBzB,QAAiBC,MAAU,IAEjEyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBT,EAAA6B,OAAOM,QAAQ,uBAAqB3B,QAAeC,MAAU,IAEjEiB,GAAaC,OAAON,EAASC,KAAKM,OAEpCV,EAAIkB,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  // delay: document.querySelector('input[name=delay]'),\n  // step: document.querySelector('input[name=step]'),\n  // amount: document.querySelector('input[name=amount]'),\n  // btn: document.querySelector('button'),\n  form: document.querySelector('.form'),\n};\n\nlet timeId = null;\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  clearTimeout(timeId);\n\n  /*може через об`єкт?*/\n  // const formData = { delay: 0, step: 0, amount: 0 };\n  const formData = ({ delay, step, amount } = evt.target.elements);\n\n  let stepValue = Number(formData.delay.value);\n  /*перевірка на нуль і менше*/\n  if (\n    formData.delay.value < 1 ||\n    formData.step.value < 1 ||\n    formData.amount.value < 1\n  ) {\n    Notify.warning(`All values must be greater than zero`);\n    return;\n  }\n  for (let i = 1; i <= formData.amount.value; i += 1) {\n    createPromise(i, stepValue)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise #${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise #${position} in ${delay}ms`);\n      });\n    stepValue += Number(formData.step.value);\n  }\n  evt.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    timeId = setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","$47d4ff9957288465$var$timeId","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","clearTimeout","formData","step","amount","target","elements","stepValue","Number","value","Notify","warning","i","then","success","catch","failure","currentTarget","reset"],"version":3,"file":"03-promises.14d53c3b.js.map"}